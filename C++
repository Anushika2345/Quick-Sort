#include <iostream>
using namespace std;
 
int partition(int array[], int start, int end)
{
 
    int pivot = array[start];
    int count = 0;
    for (int i = start + 1; i <= end; i++) {
        if (array[i] <= pivot)
            count++;
    }
 
    int piv_id = start + count;
    swap(array[pivotIndex], array[start]);
 
    int i = start, j = end;
 
    while (i <piv_id && j >piv_id) {
 
        while (array[i] <= pivot) {
            i++;
        }
 
        while (array[j] > pivot) {
            j--;
        }
 
        if (i <piv_id && j >piv_id) {
            swap(array[i++], array[j--]);
        }
    }
 
    return piv_id;
}
 
void QSort(int array[], int start, int end)
{
 
    if (start >= end)
        return;
 
    int p = partition(array, start, end);
 
   
    QSort(array, start, p - 1);
 
   
    QSort(array, p + 1, end);
}
 
int main()
{
 
    int array[] = { 10,45,2,3,8 };
    int n = 6;
 
    QSort(array, 0, n - 1);
 
    for (int i = 0; i < n; i++) {
        cout << array[i] << " ";
    }
 
    return 0;
}
